{"0": {
    "doc": "Page Not Found",
    "title": "The page you’re looking doesn’t exist, sorry.",
    "content": " ",
    "url": "http://localhost:4000/404.html#the-page-youre-looking-doesnt-exist-sorry",
    "relUrl": "/404.html#the-page-youre-looking-doesnt-exist-sorry"
  },"1": {
    "doc": "Page Not Found",
    "title": "Page Not Found",
    "content": " ",
    "url": "http://localhost:4000/404.html",
    "relUrl": "/404.html"
  },"2": {
    "doc": "Announcements",
    "title": "Announcements",
    "content": "Announcements are stored in the _announcements directory and rendered according to the layout file, _layouts/announcement.html. ",
    "url": "http://localhost:4000/announcements/",
    "relUrl": "/announcements/"
  },"3": {
    "doc": "Assignments",
    "title": "Assignments",
    "content": " ",
    "url": "http://localhost:4000/assignments/",
    "relUrl": "/assignments/"
  },"4": {
    "doc": "Calendar",
    "title": "Calendar",
    "content": " ",
    "url": "http://localhost:4000/calendar/",
    "relUrl": "/calendar/"
  },"5": {
    "doc": "Calendar",
    "title": "Tentative schedule, topic may change",
    "content": "Feb 2 (Tue) Intro Feb 4 (Thur) VCS, Code Editing and Running Feb 5 (Fri) Recitation Git/GitHub/submitting and assignment Feb 9 (Tue) File I/O Feb 11 (Thur) RegEx, Parsing Feb 12 (Fri) Recitation Command Line Feb 16 (Tue) Intro to Testing: Edge Cases, Coverage Feb 18 (Thur) WebAPIs/reading documentation Feb 19 (Fri) Recitation Reading Data Feb 23 (Tue) Break Break Day; No Classes Feb 25 (Thur) Relational Model, SQL Insert Feb 26 (Fri) Recitation Storing data Mar 2 (Tue) Normalization, Indexes, Data Design Mar 4 (Thur) Alternatives to the Relational Model Mar 5 (Fri) Recitation Data Organization Mar 9 (Tue) Querying with SQL/ACID Mar 11 (Thur) Debugging 2: Using a debugger Mar 12 (Fri) Recitation Data Querying Mar 16 (Tue) Jupyter Mar 18 (Thur) Error messages and stack overflow Mar 19 (Fri) Break Mid semester break; No Classes Mar 23 (Tue) Pandas/declarative computation Mar 25 (Thur) Data Viz Mar 26 (Fri) Recitation Data Analysis Mar 30 (Tue) Unit Testing Apr 1 (Thur) UI/System Testing Apr 2 (Fri) Recitation Data Viz Apr 6 (Tue) Web Dev 1 HTML/CSS Apr 8 (Thur) Web Dev 2 Javascript/Jekyll Apr 9 (Fri) Recitation Final Project Proposal Apr 13 (Tue) Branching/ Pull Requests Apr 15 (Thur) CI/Code Linter Apr 16 (Fri) Break Spring Carnival; No Classes Apr 20 (Tue) Excel part 1 Apr 22 (Thur) Excel part 2 Apr 23 (Fri) Recitation Data Publishing Apr 27 (Tue) Data Structures 1 Apr 29 (Thur) Data Structures 2 Apr 30 (Fri) Recitation Final Project Check-in Meetings May 4 (Tue) TBD May 6 (Thur) Performance evaluation May 7 (Fri) Recitation Final Project Check-in Meetings TBD: Final Final Project Presentation ",
    "url": "http://localhost:4000/calendar/#tentative-schedule-topic-may-change",
    "relUrl": "/calendar/#tentative-schedule-topic-may-change"
  },"6": {
    "doc": "HW01  Version Control",
    "title": "Homework 1",
    "content": "In this homework, you will be practicing using version control (git and GitHub). We will be using this throughout the course extensively. Additionally, we will be requiring you to use the command line for this assignment. ",
    "url": "http://localhost:4000/assignments/hw1#homework-1",
    "relUrl": "/assignments/hw1#homework-1"
  },"7": {
    "doc": "HW01  Version Control",
    "title": "Learning goals",
    "content": ". | Understand basic concepts of Version Control Systems (VCS) | Create Github Account | Performing basic VCS actions | Understand difference between git and GitHub | Practice VCS commands necessary for turning in homeworks | . #Tasks You will be asked to perform the following series of tasks: . | Create a GitHub account | Clone HW1 repo | Create a branch locally | Learn to manage conflicts | Push branch to github | Make a change to the student list | Open a Pull request to the main branch | . Create a Github account . You should create a free GitHub account if you do not already have one. If you are creating a new github account, you might want to consider using your andrewID, as that will make things easier for us. But you may use any account name you want. If you have an existing GitHub account, you may use that. Clone HW1 repo . There is a very simple repo that has been setup for HW1. You can find it here. You should clone the repo to a local directory on your machine. This should be done via the command line, and you should include the command(s) needed in your script to turn in. Create a branch locally . You should create a new branch of the repository, and you should name the branch with your andrewID as the name. This should be done via the command line, and you should include the command(s) needed in your script to turn in. Make a change to the student list, and commit locally, managing any conflicts that might exist . In the branch that you created, you should make a change to the ClassRoster.md file, adding your name and andrewID to the Class Roster. You should then commit that change to your local branch. Commiting should be done via the command line, and you should include the command(s) needed in your script to turn in. Push branch to github . Once you have committed your change, you should push the change on the branch to the GitHub repository. Please ensure you use a descriptive commit message! This should be done via the command line, and you should include the command(s) needed in your script to turn in. Open a Pull request to the main branch . Now that the commit is visible on the GitHub site, you should open a Pull Request from your personal branch, to the main branch. Again, don’t forget to have a descriptive message for the Pull Request. You do not need to do this via the command line, you may use the GitHub website for opening the pull request. Manage merge conflicts . Merge conflicts can be very annoying, and will be a cause of headaches for you. We want you to try and follow these steps to (artificially) create a merge conflict, so that you can merge the conflict. Here are the steps to follow: . | In the branch , create a text file called “student_facts.txt” | In this file, write what year and college you are in | Commit this change and include a message about what you just did | Create a new branch called and switch to that branch | Open up “student_facts.txt” and delete the previous line you wrote and now only include a sentence about a fun fact about yourself | Commit this change and include a message about what you just did | Switch back to the branch | Open up “student_facts.txt” and append to this file a sentence about what programming languages and/or coding classes you have taken | Commit this change and include a message about what you just did | While in , merge this branch with | You will see that there are conflicts | To resolve these conflicts, open on the file “student_facts.txt” and edit the file such that there are three different lines with (and in this order): . | A sentence about your year and major | A sentence about what programming languages and/or coding classes you have taken | A sentence with a fun fact about yourself | Commit this change and include a message about what you just did | . | While in , create a file with all of the Terminal commands you used so far The appropriate steps here should be done via the command line, and you should include the command(s) needed in your script to turn in. | . ",
    "url": "http://localhost:4000/assignments/hw1#learning-goals",
    "relUrl": "/assignments/hw1#learning-goals"
  },"8": {
    "doc": "HW01  Version Control",
    "title": "Resources",
    "content": ". | https://guides.github.com/ | https://guides.github.com/activities/hello-world/ | https://docs.github.com/en/desktop/installing-and-configuring-github- desktop/getting-started-with-github-desktop | https://gist.github.com/davfre/8313299 | https://docs.github.com/en/github/creating-cloning-and-archiving- repositories/cloning-a-repository | . ",
    "url": "http://localhost:4000/assignments/hw1#resources",
    "relUrl": "/assignments/hw1#resources"
  },"9": {
    "doc": "HW01  Version Control",
    "title": "Tips and Suggestions",
    "content": "We are requiring you to learn to use the command line interface for this assignment. While there are several git clients (SourceTree,Github Desktop) available, and if you find yourself struggling, you might want to try using a client first, then re-doing the assignment with the command line. Writing a good commit message is hard! don’t feel bad if it takes a bit of thinking, or if you are not happy with your first version. One pro tip with git. It can often be the case that your local directory can get really messed up. Feel free to delete your local directly and start over. This is a common technique when working with git. ",
    "url": "http://localhost:4000/assignments/hw1#tips-and-suggestions",
    "relUrl": "/assignments/hw1#tips-and-suggestions"
  },"10": {
    "doc": "HW01  Version Control",
    "title": "Deadlines and Deliverables",
    "content": "Due Date: Tuesday Feb 9th at 4pm. You may use up to two (2) late days, out of six total. To use a late day, simply message us on slack to let us know that you will be using a late day. Deliverable: For this assignment, you have two deliverables. You will turn in a script that shows what commands you used at the command line. You should turn this in by sending it to both instructors and the TA in a group message via slack. Your commits to the repository will be viewable by us, and we will use them for grading (you might want to confirm that they are visible by using the GitHub web interface). ",
    "url": "http://localhost:4000/assignments/hw1#deadlines-and-deliverables",
    "relUrl": "/assignments/hw1#deadlines-and-deliverables"
  },"11": {
    "doc": "HW01  Version Control",
    "title": "Assignment Review",
    "content": "Because this is a new class, we are asking you to fill out a short survey to help us calibrate the homeworks. This survey is ungraded, but your input will be very valuable for us in improving the course both for this semester, and for future years. https://docs.google.com/forms/d/e/1FAIpQLSe1v3TKk8_g4IB6P2DhQ3MUgPZJC9GCzqBoLZuzEVaM9aKguA/viewform . ",
    "url": "http://localhost:4000/assignments/hw1#assignment-review",
    "relUrl": "/assignments/hw1#assignment-review"
  },"12": {
    "doc": "HW01  Version Control",
    "title": "Grading",
    "content": "The total assignment is worth 100 points. | Item | Points | . | Create a Github account | 20 | . | Make and commit change | 40 | . | Correctly open Pull Request | 40 | . | Total | 100 | . ",
    "url": "http://localhost:4000/assignments/hw1#grading",
    "relUrl": "/assignments/hw1#grading"
  },"13": {
    "doc": "HW01  Version Control",
    "title": "HW01  Version Control",
    "content": " ",
    "url": "http://localhost:4000/assignments/hw1",
    "relUrl": "/assignments/hw1"
  },"14": {
    "doc": "HW02  Reading Data",
    "title": "Homework 2",
    "content": " ",
    "url": "http://localhost:4000/assignments/hw2#homework-2",
    "relUrl": "/assignments/hw2#homework-2"
  },"15": {
    "doc": "HW02  Reading Data",
    "title": "Learning goals",
    "content": ". | . ",
    "url": "http://localhost:4000/assignments/hw2#learning-goals",
    "relUrl": "/assignments/hw2#learning-goals"
  },"16": {
    "doc": "HW02  Reading Data",
    "title": "Tasks",
    "content": " ",
    "url": "http://localhost:4000/assignments/hw2#tasks",
    "relUrl": "/assignments/hw2#tasks"
  },"17": {
    "doc": "HW02  Reading Data",
    "title": "You will be asked to perform the following series of tasks:",
    "content": " ",
    "url": "http://localhost:4000/assignments/hw2#you-will-be-asked-to-perform-the-following-series-of-tasks",
    "relUrl": "/assignments/hw2#you-will-be-asked-to-perform-the-following-series-of-tasks"
  },"18": {
    "doc": "HW02  Reading Data",
    "title": "Resources",
    "content": " ",
    "url": "http://localhost:4000/assignments/hw2#resources",
    "relUrl": "/assignments/hw2#resources"
  },"19": {
    "doc": "HW02  Reading Data",
    "title": "Tips and Suggestions",
    "content": " ",
    "url": "http://localhost:4000/assignments/hw2#tips-and-suggestions",
    "relUrl": "/assignments/hw2#tips-and-suggestions"
  },"20": {
    "doc": "HW02  Reading Data",
    "title": "Deadlines and Deliverables",
    "content": " ",
    "url": "http://localhost:4000/assignments/hw2#deadlines-and-deliverables",
    "relUrl": "/assignments/hw2#deadlines-and-deliverables"
  },"21": {
    "doc": "HW02  Reading Data",
    "title": "Grading",
    "content": "The total assignment is worth 100 points. | Item | Points | . |   |   | . | Total | 100 | . ",
    "url": "http://localhost:4000/assignments/hw2#grading",
    "relUrl": "/assignments/hw2#grading"
  },"22": {
    "doc": "HW02  Reading Data",
    "title": "HW02  Reading Data",
    "content": " ",
    "url": "http://localhost:4000/assignments/hw2",
    "relUrl": "/assignments/hw2"
  },"23": {
    "doc": "Software Crafting",
    "title": "17-450/17-950 Crafting Software",
    "content": "Welcome to Crafting Software . Do you use programming to solve problems in your field of study? Do you know enough to be dangerous, but wish you could be proud of your code? This course aims to provide students with sufficient knowledge and skills to use programming as part of their work. In this class, you will learn how to identify and find problems in your code. You will learn to read, parse, organize, and transform data. We will teach you to write code collaboratively and refine your programs so others can use them.The course will be a mixture of lecture and guided exercise with a recitation focused on hands on instruction. In this course, students are expected to have been exposed to some basic programming concepts, such as variables, if-statements, loops, and arrays. However, students are not expected to have extensive programming experience. This course is not appropriate for students that have completed more than two courses involving programming. We expect students in this class to have diverse backgrounds and experience. Some students will be self-taught, while others will have taken a programming course such as 02-201, 15-110, 95-898, or the library’s Software Carpentry workshop. Learning Goals . | Identify the common resources available for developing software and evaluate the quality of the content. | Understand important rules and conventions of software systems. | Understand and apply common languages and tools used to develop real-world software. | Apply collaborative work strategies when developing software. | Analyze alternative software tools and select appropriate choices for the problem. | Analyze software to diagnose problems and create solutions. | Create and deploy a web application that reads, parses, and analyzes data. | . Structure of the course . Meets twice weekly Most classes will include both a lecture and a collaborative in-class exercise There will be weekly homework assignments for students to practice that week’s material There will be a summative final project, in which students will integrate the tools and techniques they have learned into a cohesive whole. Evaluation in the course will be approximately as follows: . | Homeworks: 50% | Quizzes: 10% | Final project: 30% | Participation: 10% | . ",
    "url": "http://localhost:4000/#17-45017-950-crafting-software",
    "relUrl": "/#17-45017-950-crafting-software"
  },"24": {
    "doc": "Software Crafting",
    "title": "Software Crafting",
    "content": " ",
    "url": "http://localhost:4000/",
    "relUrl": "/"
  },"25": {
    "doc": "Resources",
    "title": "git/GitHub",
    "content": "Cheatsheets: github cheatsheet git tower cheatsheet How to cite files Learning Git Learning Vim adventure game . ",
    "url": "http://localhost:4000/resources/#gitgithub",
    "relUrl": "/resources/#gitgithub"
  },"26": {
    "doc": "Resources",
    "title": "Resources",
    "content": "#Resources . ",
    "url": "http://localhost:4000/resources/",
    "relUrl": "/resources/"
  },"27": {
    "doc": "Schedule",
    "title": "Weekly Schedule",
    "content": ". | 9:00 AM | 9:30 AM | 10:00 AM | 10:30 AM | 11:00 AM | 11:30 AM | 12:00 PM | 12:30 PM | 1:00 PM | 1:30 PM | 2:00 PM | 2:30 PM | 3:00 PM | 3:30 PM | 4:00 PM | 4:30 PM | 5:00 PM | 5:30 PM | . | ",
    "url": "http://localhost:4000/schedule/#weekly-schedule",
    "relUrl": "/schedule/#weekly-schedule"
  },"28": {
    "doc": "Schedule",
    "title": "Monday",
    "content": "| ",
    "url": "http://localhost:4000/schedule/",
    "relUrl": "/schedule/"
  },"29": {
    "doc": "Schedule",
    "title": "Tuesday",
    "content": ". | Lecture 4:00 PM–5:20 PM REMOTE | . | ",
    "url": "http://localhost:4000/schedule/",
    "relUrl": "/schedule/"
  },"30": {
    "doc": "Schedule",
    "title": "Wednesday",
    "content": "| ",
    "url": "http://localhost:4000/schedule/",
    "relUrl": "/schedule/"
  },"31": {
    "doc": "Schedule",
    "title": "Thursday",
    "content": ". | Lecture 4:00 PM–5:20 PM REMOTE | . | ",
    "url": "http://localhost:4000/schedule/",
    "relUrl": "/schedule/"
  },"32": {
    "doc": "Schedule",
    "title": "Friday",
    "content": ". | Recitation 10:30 AM–11:20 AM REMOTE | . | . ",
    "url": "http://localhost:4000/schedule/",
    "relUrl": "/schedule/"
  },"33": {
    "doc": "Schedule",
    "title": "Schedule",
    "content": " ",
    "url": "http://localhost:4000/schedule/",
    "relUrl": "/schedule/"
  },"34": {
    "doc": "Staff",
    "title": "Staff",
    "content": " ",
    "url": "http://localhost:4000/staff/",
    "relUrl": "/staff/"
  },"35": {
    "doc": "Staff",
    "title": "Instructors",
    "content": "Josh Sunshine . sunshine@cs.cmu.edu . Michael Hilton . mhilton@cmu.edu . Schedule an appointment . ",
    "url": "http://localhost:4000/staff/#instructors",
    "relUrl": "/staff/#instructors"
  },"36": {
    "doc": "Staff",
    "title": "Teaching Assistants",
    "content": "Charlotte Simpson . csimpson@andrew.cmu.edu . ",
    "url": "http://localhost:4000/staff/#teaching-assistants",
    "relUrl": "/staff/#teaching-assistants"
  },"37": {
    "doc": "Syllabus",
    "title": "Syllabus",
    "content": " ",
    "url": "http://localhost:4000/syllabus/",
    "relUrl": "/syllabus/"
  },"38": {
    "doc": "Syllabus",
    "title": "Learning goals",
    "content": "Identify the common resources available for developing software and evaluate the quality of the content. Understand important rules and conventions of software systems. Understand and apply common languages and tools used to develop real-world software. Apply collaborative work strategies when developing software. Analyze alternative software tools and select appropriate choices for the problem. Analyze software to diagnose problems and create solutions. Create and deploy a web application that reads, parses, and analyzes data. ",
    "url": "http://localhost:4000/syllabus/#learning-goals",
    "relUrl": "/syllabus/#learning-goals"
  },"39": {
    "doc": "Syllabus",
    "title": "Structure of the course",
    "content": "Most classes will include both a lecture and a collaborative in-class exercise There will be weekly homework assignments for students to practice that week’s material There will be a summative final project, in which students will integrate the tools and techniques they have learned into a cohesive whole. ",
    "url": "http://localhost:4000/syllabus/#structure-of-the-course",
    "relUrl": "/syllabus/#structure-of-the-course"
  },"40": {
    "doc": "Syllabus",
    "title": "Evaluation in the course will be approximately as follows:",
    "content": ". | Homeworks: 50% | Quizzes: 10% | Final project: 30% | Participation: 10% | . ",
    "url": "http://localhost:4000/syllabus/#evaluation-in-the-course-will-be-approximately-as-follows",
    "relUrl": "/syllabus/#evaluation-in-the-course-will-be-approximately-as-follows"
  },"41": {
    "doc": "Syllabus",
    "title": "Late days",
    "content": "For the homeworks, you will have a total of six (6) late days. You may use up to two (2) late days per assignment. To use a late day, you need to to message the course staff in a private message on slack, informing us that you will be using a late day. ",
    "url": "http://localhost:4000/syllabus/#late-days",
    "relUrl": "/syllabus/#late-days"
  },"42": {
    "doc": "Syllabus",
    "title": "Logistics and People",
    "content": ". | Main class: Tuesday, Thursday 4:00-5:20pm (offered over zoom) | Recitation: Friday 10:30-11:20am (offered over zoom) | . ",
    "url": "http://localhost:4000/syllabus/#logistics-and-people",
    "relUrl": "/syllabus/#logistics-and-people"
  },"43": {
    "doc": "Syllabus",
    "title": "Instructors:",
    "content": ". | Michael Hilton (mhilton@cmu.edu) | Josh Sunshine (sunshine@cs.cmu.edu) | . ",
    "url": "http://localhost:4000/syllabus/#instructors",
    "relUrl": "/syllabus/#instructors"
  },"44": {
    "doc": "Syllabus",
    "title": "Research in the course.",
    "content": "For this class, we are conducting research on teaching and learning. This research will involve some student work. You will not be asked to do anything above and beyond the normal learning activities and assignments that are part of this course. You are free not to participate in this research, and your participation will have no influence on your grade for this course or your academic career at CMU. If you do not wish to participate, please send an email to Chad Hershock (hershock@andrew.cmu.edu). Participants will not receive any compensation. The data collected as part of this research will include student grades. All analyses of data from participants’ coursework will be conducted after the course is over and final grades are submitted. The Eberly Center may provide support on this research project regarding data analysis and interpretation. The Eberly Center for Teaching Excellence &amp; Educational Innovation is located on the CMU-Pittsburgh Campus and its mission is to support the professional development of all CMU instructors regarding teaching and learning. To minimize the risk of breach of confidentiality, the Eberly Center will never have access to data from this course containing your personal identifiers. All data will be analyzed in de-identified form and presented in the aggregate, without any personal identifiers. If you have questions pertaining to your rights as a research participant, or to report concerns to this study, please contact Chad Hershock (hershock@andrew.cmu.edu). ",
    "url": "http://localhost:4000/syllabus/#research-in-the-course",
    "relUrl": "/syllabus/#research-in-the-course"
  },"45": {
    "doc": "Syllabus",
    "title": "Professionalism.",
    "content": "Your classmates are your colleagues. This is particularly true in this course, where we aim to provide you with principles, practices, tools, and paradigms that will enable you to be an effective, real-world Software Engineer. We ask that you treat one another like the professionals you are and that you are preparing to be. To that end, we will not tolerate harassment in this class. We define harassment as unwelcome or hostile behavior of an ad hominem nature, i.e., that focuses not on ideas but on people and identity. This includes offensive verbal or written comments in reference to gender, sexual orientation, disability, physical appearance, race, or religion; sexual images in public spaces; deliberate intimidation, stalking, following, harassing photography or recording, sustained disruption of class meetings, inappropriate physical contact, and unwelcome sexual attention. Harassment is against the law and we have no tolerance for it, and neither does the university. Even when behavior does not rise to the level of harassment (even if you think you’re “just joking!”), it can still make people very uncomfortable, and harm their educational and professional career by forcing them to devote mental energy to something other than the material they are trying to learn or the professional successes they are trying to achieve. However, we expect that we do not need to threaten you to earn your respect on this matter: we simply ask that you treat one another like professionals, in the most positive sense. This has two implications: If you feel someone is violating these principles (for example, with a joke that could be interpreted as sexist, racist, or exclusionary), and you feel you have the standing to do so, speak up! Do not be a bystander to unprofessional behavior. If you do not feel comfortable doing so, and/or if the behavior persists, send a private email to the course instructors or set up a meeting with us to discuss the matter. We will preserve your anonymity. We, the course staff, are committed to affording you the same respect we ask you to afford one another. If you feel that we are not doing so, we hope you will feel comfortable either telling us so directly, or approaching another one of the course staff with your concerns. (Thank you to Shriram Krishnamurthi and Evan Peck for sharing their own policies, from which we drew inspiration for this one.) . ",
    "url": "http://localhost:4000/syllabus/#professionalism",
    "relUrl": "/syllabus/#professionalism"
  },"46": {
    "doc": "Syllabus",
    "title": "Academic honesty and collaboration.",
    "content": "The usual policies apply, especially the University Policy on Academic Integrity. Many of the assignments will be done in groups. We expect that group members collaborate with one another, but that groups work independently from one another, not exchanging results with other groups. Within groups, we expect that you are honest about your contribution to the group’s work. This implies not taking credit for others’ work and not covering for team members that have not contributed to the team. Otherwise, our expectations regarding academic honestly and collaboration for group work are the same as for individual work, substituting elevated to the level of “group.” The course includes both individual assignments and individual components of group assignments. Although your solutions for individual parts will be based on the content produced for the group component (e.g., written reflections on lessons learned), we treat individual components of group assignments as equivalent to individual assignments overall, and expect you to complete such components independently of your groupmates. You may not copy any part of a solution to a problem that was written by another student, or was developed together with another student, or was copied from another unauthorized source such as the Internet. You may not look at another student’s solution, even if you have completed your own, nor may you knowingly give your solution to another student or leave your solution where another student can see it. Here are some examples of behavior that are inappropriate: Copying or retyping, or referring to, files or parts of files (such as source code, written text, or unit tests) from another person or source (whether in final or draft form, regardless of the permissions set on the associated files) while producing your own. This is true even if your version includes minor modifications such as style or variable name changes or minor logic modifications. Getting help that you do not fully understand, and from someone whom you do not acknowledge on your solution. Writing, using, or submitting a program that attempts to alter or erase grading information or otherwise compromise security of course resources. Lying to course staff. Giving copies of work to others, or allowing someone else to copy or refer to your code or written assignment to produce their own, either in draft or final form. This includes making your work publicly available in a way that other students (current or future) can access your solutions, even if others’ access is accidental or incidental to your goals. Beware the privacy settings on your open source accounts! Coaching others step-by-step without them understanding your help. If any of your work contains any statement that was not written by you, you must put it in quotes and cite the source. If you are paraphrasing an idea you read elsewhere, you must acknowledge the source. Using existing material without proper citation is plagiarism, a form of cheating. If there is any question about whether the material is permitted, you must get permission in advance. It is not considered cheating to clarify vague points in the assignments, lectures, lecture notes; to give help or receive help in using the computer systems, compilers, debuggers, profilers, or other facilities; or to discuss ideas at a very high level, without referring to or producing code. Any violation of this policy is cheating. The minimum penalty for cheating (including plagiarism) will be a zero grade for the whole assignment. Cheating incidents will also be reported through University channels, with possible additional disciplinary action (see the above-linked University Policy on Academic Integrity). If you have any question about how this policy applies in a particular situation, ask the instructors for clarification. Note that the instructors respect honesty in these (and indeed most!) situations. ",
    "url": "http://localhost:4000/syllabus/#academic-honesty-and-collaboration",
    "relUrl": "/syllabus/#academic-honesty-and-collaboration"
  },"47": {
    "doc": "Syllabus",
    "title": "Accommodations.",
    "content": "If you wish to request an accommodation due to a documented disability, please inform the instructor as soon as possible and contact Disability Resources at 412.268.2013 or access@andrew.cmu.edu. ",
    "url": "http://localhost:4000/syllabus/#accommodations",
    "relUrl": "/syllabus/#accommodations"
  },"48": {
    "doc": "Syllabus",
    "title": "A note on self care.",
    "content": "Please take care of yourself. Do your best to maintain a healthy lifestyle this semester by eating well, exercising, avoiding drugs and alcohol, getting enough sleep and taking some time to relax. This will help you achieve your goals and cope with stress. All of us benefit from support during times of struggle. You are not alone. There are many helpful resources available on campus and an important part of the college experience is learning how to ask for help. Asking for support sooner rather than later is often helpful. If you or anyone you know experiences any academic stress, difficult life events, or feelings like anxiety or depression, we strongly encourage you to seek support. Counseling and Psychological Services (CaPS) is here to help: call 412-268-2922 and visit their website at http://www.cmu.edu/counseling/. Consider reaching out to a friend, faculty or family member you trust for help getting connected to the support that can help. ",
    "url": "http://localhost:4000/syllabus/#a-note-on-self-care",
    "relUrl": "/syllabus/#a-note-on-self-care"
  }
}
